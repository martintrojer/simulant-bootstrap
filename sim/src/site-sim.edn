{:model
 [[;; We are modelling site usage simulation
   {:db/id #db/id[:db.part/db]
    :db/ident :model.type/siteUsage}
   ;; Configuration parameters for the model
   {:db/id #db/id[:db.part/db]
    :db/ident :model/userCount
    :db/valueType :db.type/long
    :db/doc "Number of API users"
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}
   {:db/id #db/id[:db.part/db]
    :db/ident :model/meanPayloadSize
    :db/valueType :db.type/long
    :db/doc "Mean size of payload (geometric distribution)."
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}
   {:db/id #db/id[:db.part/db]
    :db/ident :model/meanSecsBetweenHits
    :db/valueType :db.type/long
    :db/doc "Mean time between api hits in seconds (geometric distribution)"
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}]]

 :test
 [[;; One type of test
   {:db/id #db/id[:db.part/db]
    :db/ident :test.type/putGetDelte}
   ;; One type of agent (simulating a user)
   {:db/id #db/id[:db.part/db]
    :db/ident :agent.type/apiUser}
   ;; Three type of actions
   {:db/id #db/id[:db.part/db]
    :db/ident :action.type/put}
   {:db/id #db/id[:db.part/db]
    :db/ident :action.type/get}
   {:db/id #db/id[:db.part/db]
    :db/ident :action.type/delete}]]

 :api-user-data
 [[;; The set of Ids a agent have gotten back from the site
   {:db/id #db/id[:db.part/db]
    :db/ident :agent/siteIds
    :db/valueType :db.type/long
    :db/cardinality :db.cardinality/many
    :db.install/_attribute :db.part/db}
   ;; The payload to be sent TO the site in a put action
   {:db/id #db/id[:db.part/db]
    :db/ident :action/payload
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}
   ;; The payload returned FROM the site in a get action
   {:db/id #db/id[:db.part/db]
    :db/ident :action/sitePayload
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}
   ;; The Id returned FROM the site in a put action, and send TO the site
   ;; in a get/delete action
   {:db/id #db/id[:db.part/db]
    :db/ident :action/siteId
    :db/valueType :db.type/long
    :db/cardinality :db.cardinality/one
    :db.install/_attribute :db.part/db}]]
 }
